import{a as p}from"./chunk-ILX3UTWF.mjs";import{a as l,b as m}from"./chunk-3PWWPIDG.mjs";import{a as c}from"./chunk-YSXGDEY5.mjs";import{Tool as b}from"@goat-sdk/core";import{EVMWalletClient as u}from"@goat-sdk/wallet-evm";function _(a,e,r,n){var o=arguments.length,t=o<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,r):n,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")t=Reflect.decorate(a,e,r,n);else for(var s=a.length-1;s>=0;s--)(i=a[s])&&(t=(o<3?i(t):o>3?i(e,r,t):i(e,r))||t);return o>3&&t&&Object.defineProperty(e,r,t),t}c(_,"_ts_decorate");function f(a,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(a,e)}c(f,"_ts_metadata");var d=class{static{c(this,"ModeSprayService")}async sprayEther(e,r){try{let{recipients:n,amounts:o}=r,t=e.getChain();if(!t?.id)throw new Error("Unable to determine chain ID from wallet client");let i=this.getContractAddress(t.id),s=o.reduce((y,E)=>y+BigInt(E),BigInt(0)),{hash:h}=await e.sendTransaction({to:i,abi:m,functionName:"sprayEther",args:[n,o],value:s});return h}catch(n){throw new Error(`Failed to disperse Ether: ${n}`)}}getContractAddress(e){let r=l[e];if(!r)throw new Error(`ModeSpray contract not available for chainId: ${e}`);return r}};_([b({name:"disperse_eth_to_multiple_addresses",description:"Spray or Disperse Ether to multiple recipients"}),f("design:type",Function),f("design:paramtypes",[typeof u>"u"?Object:u,typeof p>"u"?Object:p]),f("design:returntype",Promise)],d.prototype,"sprayEther",null);export{d as a};
