"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _zod = require('zod');var t=class extends _core.createToolParameters.call(void 0, _zod.z.object({recipients:_zod.z.array(_zod.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Each recipient must be a valid Ethereum address 42 hexadecimal characters included 0x-prefixed.")).nonempty({message:"The recipients array must have at least one valid Ethereum address."}),amounts:_zod.z.array(_zod.z.string().regex(/^\d+$/,"Each amount must be a positive in gwei units")).nonempty({message:"The amounts array must have at least one valid amount specified"})})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"SprayEtherParams")}},s= exports.b =class extends _core.createToolParameters.call(void 0, _zod.z.object({token:_zod.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"The token address must be a valid Ethereum address 42 hexadecimal characters included 0x-prefixed."),recipients:_zod.z.array(_zod.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Each recipient must be a valid Ethereum address 42 hexadecimal characters included 0x-prefixed.")).nonempty({message:"The recipients array must have at least one valid Ethereum address."}),amounts:_zod.z.array(_zod.z.string().regex(/^\d+$/,"Each amount must be a positive integer in the token unit.")).nonempty({message:"The amounts array must have at least one valid amount specified in the token unit."})})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"SprayErc20TokenParams")}};exports.a = t; exports.b = s;
