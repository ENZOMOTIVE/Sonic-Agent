import{a as o}from"./chunk-YSXGDEY5.mjs";import{PluginBase as u}from"@goat-sdk/core";import{createTool as p}from"@goat-sdk/core";import{SystemProgram as f}from"@solana/web3.js";import{PublicKey as d}from"@solana/web3.js";import{parseUnits as S}from"viem";import{z as n}from"zod";var a=class extends u{static{o(this,"SendSOLPlugin")}constructor(){super("sendSOL",[])}supportsChain(t){return t.type==="solana"}getTools(t){return[p({name:"send_SOL",description:"Send SOL to an address.",parameters:h},s=>l(t,s))]}},k=o(()=>new a,"sendSOL"),h=n.object({to:n.string().describe("The address to send SOL to"),amount:n.string().describe("The amount of SOL to send")});async function l(r,t){try{let{to:e,amount:s}=t,c=r.getAddress(),m=S(s,9),i=f.transfer({fromPubkey:new d(c),toPubkey:new d(e),lamports:m});return(await r.sendTransaction({instructions:[i]})).hash}catch(e){throw new Error(`Failed to send SOL: ${e}`)}}o(l,"sendSOLMethod");export{a,k as b};
