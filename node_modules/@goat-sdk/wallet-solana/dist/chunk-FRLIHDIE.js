"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _web3js = require('@solana/web3.js');var _viem = require('viem');var _zod = require('zod');var a=class extends _core.PluginBase{static{_chunkEI7MMDWYjs.a.call(void 0, this,"SendSOLPlugin")}constructor(){super("sendSOL",[])}supportsChain(t){return t.type==="solana"}getTools(t){return[_core.createTool.call(void 0, {name:"send_SOL",description:"Send SOL to an address.",parameters:h},s=>l(t,s))]}},P= exports.b =_chunkEI7MMDWYjs.a.call(void 0, ()=>new a,"sendSOL"),h=_zod.z.object({to:_zod.z.string().describe("The address to send SOL to"),amount:_zod.z.string().describe("The amount of SOL to send")});async function l(r,t){try{let{to:e,amount:s}=t,c=r.getAddress(),m=_viem.parseUnits.call(void 0, s,9),i=_web3js.SystemProgram.transfer({fromPubkey:new (0, _web3js.PublicKey)(c),toPubkey:new (0, _web3js.PublicKey)(e),lamports:m});return(await r.sendTransaction({instructions:[i]})).hash}catch(e){throw new Error(`Failed to send SOL: ${e}`)}}_chunkEI7MMDWYjs.a.call(void 0, l,"sendSOLMethod");exports.a = a; exports.b = P;
