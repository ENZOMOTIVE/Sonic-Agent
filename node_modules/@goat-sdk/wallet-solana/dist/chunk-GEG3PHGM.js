"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _chunkDFKP65AQjs = require('./chunk-DFKP65AQ.js');var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _web3js = require('@solana/web3.js');var _tweetnacl = require('tweetnacl'); var _tweetnacl2 = _interopRequireDefault(_tweetnacl);var o=class extends _chunkDFKP65AQjs.a{static{_chunkEI7MMDWYjs.a.call(void 0, this,"SolanaKeypairWalletClient")}#t;constructor(e){let{keypair:t,connection:s}=e;super({connection:s}),this.#t=t}getAddress(){return this.#t.publicKey.toBase58()}async signMessage(e){let t=Buffer.from(e),s=_tweetnacl2.default.sign.detached(t,this.#t.secretKey);return{signature:Buffer.from(s).toString("hex")}}async sendTransaction({instructions:e,addressLookupTableAddresses:t=[],accountsToSign:s=[]}){let n=await this.connection.getLatestBlockhash(),m=new (0, _web3js.TransactionMessage)({payerKey:this.#t.publicKey,recentBlockhash:n.blockhash,instructions:e}).compileToV0Message(await this.getAddressLookupTableAccounts(t)),c=new (0, _web3js.VersionedTransaction)(m);c.sign([this.#t,...s]);let r=await this.connection.sendTransaction(c,{maxRetries:10,preflightCommitment:"confirmed"});return await this.connection.confirmTransaction({blockhash:n.blockhash,lastValidBlockHeight:n.lastValidBlockHeight,signature:r},"confirmed"),{hash:r}}async sendRawTransaction(e){let t=_web3js.VersionedTransaction.deserialize(Buffer.from(e,"base64")),s=await this.connection.getLatestBlockhash();t.message.recentBlockhash=s.blockhash,t.sign([this.#t]);let n=await this.connection.sendTransaction(t,{maxRetries:10,preflightCommitment:"confirmed"});return await this.connection.confirmTransaction({blockhash:s.blockhash,lastValidBlockHeight:s.lastValidBlockHeight,signature:n},"confirmed"),{hash:n}}},p= exports.b =_chunkEI7MMDWYjs.a.call(void 0, i=>new o(i),"solana");exports.a = o; exports.b = p;
