interface AlloraInferenceData {
    network_inference: string;
    network_inference_normalized: string;
    confidence_interval_percentiles: string[];
    confidence_interval_percentiles_normalized: string[];
    confidence_interval_values: string[];
    confidence_interval_values_normalized: string[];
    topic_id: string;
    timestamp: number;
    extra_data: string;
}
interface AlloraAPIResponse {
    request_id: string;
    status: boolean;
    data: {
        signature: string;
        inference_data: AlloraInferenceData;
    };
}
declare enum AlloraPricePredictionToken {
    BTC = "BTC",
    ETH = "ETH"
}
declare enum AlloraPricePredictionTimeframe {
    "5m" = "5m",
    "8h" = "8h"
}
declare enum AlloraPricePredictionSignatureFormat {
    EthereumSepolia = "ethereum-11155111"
}
interface AlloraAPIClientOptions {
    apiKey?: string;
    apiRoot?: string;
}
declare class AlloraAPIClient {
    private apiKey;
    private apiRoot;
    constructor(opts: AlloraAPIClientOptions);
    fetchAlloraPricePrediction(asset: AlloraPricePredictionToken, timeframe: AlloraPricePredictionTimeframe, signatureFormat?: AlloraPricePredictionSignatureFormat): Promise<Partial<AlloraInferenceData>>;
    private fetchAlloraAPIData;
}

export { AlloraAPIClient, type AlloraAPIClientOptions, type AlloraAPIResponse, type AlloraInferenceData, AlloraPricePredictionSignatureFormat, AlloraPricePredictionTimeframe, AlloraPricePredictionToken };
