import{a as P}from"./chunk-3A5QBWB2.mjs";import{a as g,b as u,c as f,d as _,e as m,f as k}from"./chunk-2TIQTVMZ.mjs";import{a as l}from"./chunk-YSXGDEY5.mjs";import{Tool as p}from"@goat-sdk/core";function d(a,e,t,n){var s=arguments.length,r=s<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,c;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(a,e,t,n);else for(var y=a.length-1;y>=0;y--)(c=a[y])&&(r=(s<3?c(r):s>3?c(e,t,r):c(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}l(d,"_ts_decorate");function o(a,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(a,e)}l(o,"_ts_metadata");var i=class extends P{static{l(this,"CoinGeckoProService")}async getPoolDataByPoolAddress(e){let{network:t,addresses:n}=e;return this.api.request(`coins/${t}/pools/multi/${n.join(",")}`,{})}async getTrendingPools(e){let{include:t,page:n,duration:s}=e;return this.api.request("onchain/networks/trending_pools",{include:t.join(","),page:n,duration:s})}async getTrendingPoolsByNetwork(e){let{network:t}=e;return this.api.request(`onchain/networks/${t}/trending_pools`,{})}async getTopGainersLosers(e){let{vsCurrency:t,duration:n,topCoins:s}=e;return this.api.request("coins/top_gainers_losers",{vs_currency:t,duration:n,top_coins:s})}async getTokenDataByTokenAddress(e){let{network:t,address:n}=e;return this.api.request(`onchain/networks/${t}/tokens/${n}/info`,{})}async getTokensInfoByPoolAddress(e){let{network:t,poolAddress:n}=e;return this.api.request(`onchain/networks/${t}/pools/${n}/tokens`,{})}};d([p({name:"coingecko_get_pool_data_by_pool_address",description:"Get data for a specific pool by its address"}),o("design:type",Function),o("design:paramtypes",[typeof g>"u"?Object:g]),o("design:returntype",Promise)],i.prototype,"getPoolDataByPoolAddress",null);d([p({name:"coingecko_get_trending_pools",description:"Get trending pools for a specific network"}),o("design:type",Function),o("design:paramtypes",[typeof f>"u"?Object:f]),o("design:returntype",Promise)],i.prototype,"getTrendingPools",null);d([p({name:"coingecko_get_trending_pools_by_network",description:"Get trending pools for a specific network"}),o("design:type",Function),o("design:paramtypes",[typeof u>"u"?Object:u]),o("design:returntype",Promise)],i.prototype,"getTrendingPoolsByNetwork",null);d([p({name:"coingecko_get_top_gainers_losers",description:"Get top gainers and losers for a specific duration"}),o("design:type",Function),o("design:paramtypes",[typeof _>"u"?Object:_]),o("design:returntype",Promise)],i.prototype,"getTopGainersLosers",null);d([p({name:"coingecko_get_token_data_by_token_address",description:"Get data for a specific token by its address"}),o("design:type",Function),o("design:paramtypes",[typeof m>"u"?Object:m]),o("design:returntype",Promise)],i.prototype,"getTokenDataByTokenAddress",null);d([p({name:"coingecko_get_tokens_info_by_pool_address",description:"Get data for all tokens in a specific pool by its address"}),o("design:type",Function),o("design:paramtypes",[typeof k>"u"?Object:k]),o("design:returntype",Promise)],i.prototype,"getTokensInfoByPoolAddress",null);export{i as a};
