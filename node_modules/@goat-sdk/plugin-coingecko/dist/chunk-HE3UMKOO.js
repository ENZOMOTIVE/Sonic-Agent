"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _zod = require('zod');var d=class extends _core.createToolParameters.call(void 0, _zod.z.object({})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"NoParams")}},n= exports.b =class extends _core.createToolParameters.call(void 0, _zod.z.object({coinIds:_zod.z.array(_zod.z.string()).describe("The ID of the coin on CoinGecko (e.g., 'bitcoin', 'eth')"),vsCurrency:_zod.z.string().default("usd").describe("The target currency to get price in (e.g., 'usd', 'eur', 'jpy')"),includeMarketCap:_zod.z.boolean().optional().default(!1).describe("Include market cap data in the response"),include24hrVol:_zod.z.boolean().optional().default(!1).describe("Include 24 hour volume data in the response"),include24hrChange:_zod.z.boolean().optional().default(!1).describe("Include 24 hour price change data in the response"),includeLastUpdatedAt:_zod.z.boolean().optional().default(!1).describe("Include last updated timestamp in the response")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetCoinPricesParameters")}},r= exports.c =class extends _core.createToolParameters.call(void 0, _zod.z.object({query:_zod.z.string().describe("The search query to find coins (e.g., 'bitcoin' or 'btc')")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"SearchCoinsParameters")}},s= exports.d =class extends _core.createToolParameters.call(void 0, _zod.z.object({id:_zod.z.string().describe("Asset platform's id (e.g., 'eth')"),contractAddresses:_zod.z.array(_zod.z.string()).describe("List of contract addresses for the tokens"),vsCurrency:_zod.z.string().default("usd").describe("Target currency (e.g., 'usd', 'eur')"),includeMarketCap:_zod.z.boolean().optional().default(!1).describe("Include market cap data"),include24hrVol:_zod.z.boolean().optional().default(!1).describe("Include 24hr volume"),include24hrChange:_zod.z.boolean().optional().default(!1).describe("Include 24hr change"),includeLastUpdatedAt:_zod.z.boolean().optional().default(!1).describe("Include last updated timestamp")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetCoinPriceByContractAddressParameters")}},c= exports.e =class extends _core.createToolParameters.call(void 0, _zod.z.object({id:_zod.z.string().describe("Pass the coin id (can be obtained from the supported coins endpoint)"),localization:_zod.z.boolean().optional().default(!1).describe("Include all localizations"),tickers:_zod.z.boolean().optional().default(!0).describe("Include tickers data"),marketData:_zod.z.boolean().optional().default(!0).describe("Include market data"),communityData:_zod.z.boolean().optional().default(!0).describe("Include community data"),developerData:_zod.z.boolean().optional().default(!0).describe("Include developer data"),sparkline:_zod.z.boolean().optional().default(!1).describe("Include sparkline 7 days data")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetCoinDataParameters")}},i= exports.f =class extends _core.createToolParameters.call(void 0, _zod.z.object({id:_zod.z.string().describe("Pass the coin id (can be obtained from the supported coins endpoint)"),date:_zod.z.string().describe("The date of data snapshot in dd-mm-yyyy format"),localization:_zod.z.boolean().optional().default(!0).describe("Include localized languages")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetHistoricalDataParameters")}},l= exports.g =class extends _core.createToolParameters.call(void 0, _zod.z.object({id:_zod.z.string().describe("Pass the coin id (can be obtained from the supported coins endpoint)"),vsCurrency:_zod.z.string().default("usd").describe("The target currency of market data (usd, eur, jpy, etc.)"),days:_zod.z.number().describe("Data up to number of days ago (1/7/14/30/90/180/365/max)")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetOHLCParameters")}},u= exports.h =class extends _core.createToolParameters.call(void 0, _zod.z.object({vsCurrency:_zod.z.string().default("usd").describe("The target currency of market data (usd, eur, jpy, etc.)"),ids:_zod.z.array(_zod.z.string()).describe("The ids of the coins to get trending data for"),category:_zod.z.string().describe("The category to get trending data for"),order:_zod.z.enum(["market_cap_desc","volume_desc","volume_asc","market_cap_asc"]).describe("The order to get trending data for"),perPage:_zod.z.number().min(1).max(30).default(10).describe("The number of trending coins to get"),page:_zod.z.number().describe("The page number to get trending coins for"),sparkline:_zod.z.boolean().optional().default(!1).describe("Include sparkline 7 days data"),priceChangePercentage:_zod.z.enum(["1h","24h","7d","14d","30d","200d","1y"]).optional().default("24h").describe("The price change percentage to get trending coins for"),locale:_zod.z.string().optional().default("en").describe("The locale to get trending coins for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTrendingCoinCategoriesParameters")}};exports.a = d; exports.b = n; exports.c = r; exports.d = s; exports.e = c; exports.f = i; exports.g = l; exports.h = u;
