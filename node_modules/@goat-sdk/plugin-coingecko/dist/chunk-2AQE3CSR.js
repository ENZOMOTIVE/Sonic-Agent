"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _zod = require('zod');var s=class extends _core.createToolParameters.call(void 0, _zod.z.object({network:_zod.z.string().describe("The network id to get data for (e.g., 'eth', 'polygon_pos')"),addresses:_zod.z.array(_zod.z.string()).describe("The addresses of the pools to get data for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetPoolDataByPoolAddressParameters")}},d= exports.b =class extends _core.createToolParameters.call(void 0, _zod.z.object({network:_zod.z.string().describe("The network id to get data for (e.g., 'eth', 'polygon_pos')")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTrendingPoolsByNetworkParameters")}},n= exports.c =class extends _core.createToolParameters.call(void 0, _zod.z.object({include:_zod.z.array(_zod.z.enum(["base_token","quote_token","dex","network"])).describe("The fields to include in the response"),page:_zod.z.number().max(10).describe("The page number to get trending pools for"),duration:_zod.z.enum(["24h","6h","1h","5m"]).describe("The duration to get trending pools for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTrendingPoolsParameters")}},i= exports.d =class extends _core.createToolParameters.call(void 0, _zod.z.object({vsCurrency:_zod.z.string().default("usd").describe("The target currency of market data (usd, eur, jpy, etc.)"),duration:_zod.z.enum(["1h","24h","7d","14d","30d","60d","1y"]).optional().default("24h").describe("The duration to get top gainers/losers for"),topCoins:_zod.z.enum(["300","500","1000","all"]).optional().default("1000").describe("The number of top coins to get")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"TopGainersLosersParameters")}},a= exports.e =class extends _core.createToolParameters.call(void 0, _zod.z.object({network:_zod.z.string().describe("The network id to get data for (e.g., 'eth', 'polygon_pos')"),address:_zod.z.string().describe("The address of the token to get data for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokenDataByTokenAddressParameters")}},c= exports.f =class extends _core.createToolParameters.call(void 0, _zod.z.object({network:_zod.z.string().describe("The network id to get data for (e.g., 'eth', 'polygon_pos')"),poolAddress:_zod.z.string().describe("The address of the pool to get data for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokensInfoByPoolAddressParameters")}};exports.a = s; exports.b = d; exports.c = n; exports.d = i; exports.e = a; exports.f = c;
