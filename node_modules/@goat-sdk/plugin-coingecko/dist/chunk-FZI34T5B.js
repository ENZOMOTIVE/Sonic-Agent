"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkDUVW54P4js = require('./chunk-DUVW54P4.js');var _chunk2AQE3CSRjs = require('./chunk-2AQE3CSR.js');var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');function d(a,e,t,n){var s=arguments.length,r=s<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,c;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(a,e,t,n);else for(var y=a.length-1;y>=0;y--)(c=a[y])&&(r=(s<3?c(r):s>3?c(e,t,r):c(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}_chunkEI7MMDWYjs.a.call(void 0, d,"_ts_decorate");function o(a,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(a,e)}_chunkEI7MMDWYjs.a.call(void 0, o,"_ts_metadata");var i=class extends _chunkDUVW54P4js.a{static{_chunkEI7MMDWYjs.a.call(void 0, this,"CoinGeckoProService")}async getPoolDataByPoolAddress(e){let{network:t,addresses:n}=e;return this.api.request(`coins/${t}/pools/multi/${n.join(",")}`,{})}async getTrendingPools(e){let{include:t,page:n,duration:s}=e;return this.api.request("onchain/networks/trending_pools",{include:t.join(","),page:n,duration:s})}async getTrendingPoolsByNetwork(e){let{network:t}=e;return this.api.request(`onchain/networks/${t}/trending_pools`,{})}async getTopGainersLosers(e){let{vsCurrency:t,duration:n,topCoins:s}=e;return this.api.request("coins/top_gainers_losers",{vs_currency:t,duration:n,top_coins:s})}async getTokenDataByTokenAddress(e){let{network:t,address:n}=e;return this.api.request(`onchain/networks/${t}/tokens/${n}/info`,{})}async getTokensInfoByPoolAddress(e){let{network:t,poolAddress:n}=e;return this.api.request(`onchain/networks/${t}/pools/${n}/tokens`,{})}};d([_core.Tool.call(void 0, {name:"coingecko_get_pool_data_by_pool_address",description:"Get data for a specific pool by its address"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.a>"u"?Object:_chunk2AQE3CSRjs.a]),o("design:returntype",Promise)],i.prototype,"getPoolDataByPoolAddress",null);d([_core.Tool.call(void 0, {name:"coingecko_get_trending_pools",description:"Get trending pools for a specific network"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.c>"u"?Object:_chunk2AQE3CSRjs.c]),o("design:returntype",Promise)],i.prototype,"getTrendingPools",null);d([_core.Tool.call(void 0, {name:"coingecko_get_trending_pools_by_network",description:"Get trending pools for a specific network"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.b>"u"?Object:_chunk2AQE3CSRjs.b]),o("design:returntype",Promise)],i.prototype,"getTrendingPoolsByNetwork",null);d([_core.Tool.call(void 0, {name:"coingecko_get_top_gainers_losers",description:"Get top gainers and losers for a specific duration"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.d>"u"?Object:_chunk2AQE3CSRjs.d]),o("design:returntype",Promise)],i.prototype,"getTopGainersLosers",null);d([_core.Tool.call(void 0, {name:"coingecko_get_token_data_by_token_address",description:"Get data for a specific token by its address"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.e>"u"?Object:_chunk2AQE3CSRjs.e]),o("design:returntype",Promise)],i.prototype,"getTokenDataByTokenAddress",null);d([_core.Tool.call(void 0, {name:"coingecko_get_tokens_info_by_pool_address",description:"Get data for all tokens in a specific pool by its address"}),o("design:type",Function),o("design:paramtypes",[typeof _chunk2AQE3CSRjs.f>"u"?Object:_chunk2AQE3CSRjs.f]),o("design:returntype",Promise)],i.prototype,"getTokensInfoByPoolAddress",null);exports.a = i;
