import * as _goat_sdk_core from '@goat-sdk/core';
import { z } from 'zod';

type StakeParametersType = z.infer<typeof StakeSchema>;
type GetStakeInfoParametersType = z.infer<typeof GetStakeInfoSchema>;
type GetBalanceParametersType = z.infer<typeof GetBalanceSchema>;
declare const StakeSchema: z.ZodObject<{
    amount: z.ZodString;
    tokenType: z.ZodEnum<["MODE", "BPT"]>;
}, "strip", z.ZodTypeAny, {
    amount: string;
    tokenType: "MODE" | "BPT";
}, {
    amount: string;
    tokenType: "MODE" | "BPT";
}>;
declare const GetStakeInfoSchema: z.ZodObject<{
    tokenType: z.ZodEnum<["MODE", "BPT"]>;
}, "strip", z.ZodTypeAny, {
    tokenType: "MODE" | "BPT";
}, {
    tokenType: "MODE" | "BPT";
}>;
declare const GetBalanceSchema: z.ZodObject<{
    tokenType: z.ZodEnum<["MODE", "BPT", "veMode", "veBPT"]>;
    address: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    tokenType: "MODE" | "BPT" | "veMode" | "veBPT";
    address?: string | undefined;
}, {
    tokenType: "MODE" | "BPT" | "veMode" | "veBPT";
    address?: string | undefined;
}>;
declare const StakeParameters_base: _goat_sdk_core.ToolParametersStatic<z.ZodObject<{
    amount: z.ZodString;
    tokenType: z.ZodEnum<["MODE", "BPT"]>;
}, "strip", z.ZodTypeAny, {
    amount: string;
    tokenType: "MODE" | "BPT";
}, {
    amount: string;
    tokenType: "MODE" | "BPT";
}>>;
declare class StakeParameters extends StakeParameters_base {
}
declare const GetStakeInfoParameters_base: _goat_sdk_core.ToolParametersStatic<z.ZodObject<{
    tokenType: z.ZodEnum<["MODE", "BPT"]>;
}, "strip", z.ZodTypeAny, {
    tokenType: "MODE" | "BPT";
}, {
    tokenType: "MODE" | "BPT";
}>>;
declare class GetStakeInfoParameters extends GetStakeInfoParameters_base {
}
declare const GetBalanceParameters_base: _goat_sdk_core.ToolParametersStatic<z.ZodObject<{
    tokenType: z.ZodEnum<["MODE", "BPT", "veMode", "veBPT"]>;
    address: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    tokenType: "MODE" | "BPT" | "veMode" | "veBPT";
    address?: string | undefined;
}, {
    tokenType: "MODE" | "BPT" | "veMode" | "veBPT";
    address?: string | undefined;
}>>;
declare class GetBalanceParameters extends GetBalanceParameters_base {
}

export { GetBalanceParameters, type GetBalanceParametersType, GetStakeInfoParameters, type GetStakeInfoParametersType, StakeParameters, type StakeParametersType };
