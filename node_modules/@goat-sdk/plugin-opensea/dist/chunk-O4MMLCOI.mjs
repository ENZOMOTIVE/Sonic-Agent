var a=Object.defineProperty;var n=(t,o)=>a(t,"name",{value:o,configurable:!0});import{createToolParameters as i}from"@goat-sdk/core";import{z as e}from"zod";var r=class extends i(e.object({collectionSlug:e.string()})){static{n(this,"GetNftCollectionStatisticsParametersSchema")}},s=class extends i(e.object({collectionSlug:e.string()})){static{n(this,"GetNftSalesParametersSchema")}},b=e.object({total:e.object({volume:e.number(),sales:e.number(),average_price:e.number(),num_owners:e.number(),market_cap:e.number(),floor_price:e.number(),floor_price_symbol:e.string()}),intervals:e.array(e.object({interval:e.string(),volume:e.number(),volume_diff:e.number(),volume_change:e.number(),sales:e.number(),sales_diff:e.number(),average_price:e.number()}))}),_=e.object({asset_events:e.array(e.object({event_type:e.string(),order_hash:e.string(),chain:e.string(),protocol_address:e.string(),closing_date:e.number(),nft:e.object({identifier:e.string(),collection:e.string(),contract:e.string(),token_standard:e.string(),name:e.string(),description:e.string(),image_url:e.string(),display_image_url:e.string(),display_animation_url:e.string().nullable(),metadata_url:e.string(),opensea_url:e.string(),updated_at:e.string(),is_disabled:e.boolean(),is_nsfw:e.boolean()}),quantity:e.number(),seller:e.string(),buyer:e.string(),payment:e.object({quantity:e.string(),token_address:e.string(),decimals:e.number(),symbol:e.string()}),transaction:e.string(),event_timestamp:e.number()})),next:e.string()});export{n as a,r as b,s as c,b as d,_ as e};
